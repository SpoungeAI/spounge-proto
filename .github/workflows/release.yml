name: Release NPM Package

on:
  push:
    branches:
      - release

jobs:
  filter_npm_changes:
    runs-on: ubuntu-latest
    outputs:
      npm_changes: ${{ steps.filter.outputs.npm_changes }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Filter for npm-related changes
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            npm_changes:
              - 'proto/**'
              - 'gen/ts/**'
              - 'package.json'
              - 'package-lock.json'
              - '.releaserc.json'

  release_npm:
    needs: filter_npm_changes
    if: needs.filter_npm_changes.outputs.npm_changes == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'
          registry-url: 'https://registry.npmjs.org'

      - name: Install root dependencies
        run: npm ci

      - name: Build generated TypeScript package
        run: npm run build

      - name: Install dependencies for gen/ts package
        run: npm ci
        working-directory: gen/ts

      # Optional: If you have tests, run them here
      # - name: Run tests for gen/ts package
      #   run: npm test
      #   working-directory: gen/ts

      - name: Configure Git for semantic-release
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        with:
          semantic_version: 20
          pkgRoot: gen/ts
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
