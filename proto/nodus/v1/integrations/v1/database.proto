syntax = "proto3";

package nodus.v1.integrations.v1;
option go_package = "github.com/spounge-ai/spounge-protos/gen/go/nodus/v1/integrations/v1;integrationsv1";

import "google/protobuf/struct.proto";
import "google/protobuf/duration.proto";

enum DatabaseType {
  DATABASE_TYPE_UNSPECIFIED = 0;
  DATABASE_TYPE_POSTGRESQL = 1;
  DATABASE_TYPE_MYSQL = 2;
  DATABASE_TYPE_SQLITE = 3;
  DATABASE_TYPE_MONGODB = 4;
  DATABASE_TYPE_REDIS = 5;
  DATABASE_TYPE_ELASTICSEARCH = 6;
  DATABASE_TYPE_PINECONE = 7;
  DATABASE_TYPE_QDRANT = 8;
  DATABASE_TYPE_CLICKHOUSE = 9;
}

message DatabaseConfig {
  DatabaseType database_type = 1;
  string connection_string_template = 2; // For patterns like postgresql://${user}:${password}@...
  string host = 3;
  int32 port = 4;
  string database = 5;
  string username = 6;
  string password_credential_id = 7;
  bool use_ssl = 8;
  map<string, string> connection_params = 9;
  ConnectionPoolConfig pool_config = 10;
}

message ConnectionPoolConfig {
  int32 max_connections = 1;
  int32 min_connections = 2;
  google.protobuf.Duration connection_timeout = 3;
  google.protobuf.Duration idle_timeout = 4;
  google.protobuf.Duration max_lifetime = 5;
}

message VectorDatabaseConfig {
  DatabaseType database_type = 1;
  string api_key_credential_id = 2;
  string environment = 3;
  string index_name = 4;
  int32 dimension = 5;
  string metric = 6;
  map<string, google.protobuf.Value> metadata_config = 7;
}

message QueryConfig {
  string query = 1;
  google.protobuf.Struct parameters = 2;
  int32 limit = 3;
  int32 offset = 4;
  google.protobuf.Duration timeout = 5;
  bool read_only = 6;
}
