{
  "swagger": "2.0",
  "info": {
    "title": "api/v1/dashboard_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "DashboardService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/dashboard": {
      "get": {
        "operationId": "DashboardService_GetDashboard",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetDashboardResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "DashboardService"
        ]
      }
    }
  },
  "definitions": {
    "commonv1Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message."
        },
        "details": {
          "type": "object",
          "description": "A list of messages that carry the error details."
        }
      },
      "description": "Status is a standard message for returning operation status.\nIt's modeled after google.rpc.Status."
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\nThe JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "v1APIKey": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for the API key."
        },
        "userId": {
          "type": "string",
          "description": "The ID of the user who owns this key."
        },
        "name": {
          "type": "string",
          "description": "A user-defined name for the key for easy identification."
        },
        "keyPrefix": {
          "type": "string",
          "description": "A short, non-sensitive prefix of the key for display purposes."
        },
        "description": {
          "type": "string",
          "description": "An optional description for the key's purpose."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the key was created."
        },
        "lastUsedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the key was last used."
        }
      },
      "description": "APIKey represents the public, non-sensitive information of an API key."
    },
    "v1ExecutionStatus": {
      "type": "string",
      "enum": [
        "EXECUTION_STATUS_UNSPECIFIED",
        "EXECUTION_STATUS_PENDING",
        "EXECUTION_STATUS_RUNNING",
        "EXECUTION_STATUS_COMPLETED",
        "EXECUTION_STATUS_FAILED",
        "EXECUTION_STATUS_CANCELLED"
      ],
      "default": "EXECUTION_STATUS_UNSPECIFIED",
      "description": "ExecutionStatus represents the lifecycle status of a workflow run."
    },
    "v1GetDashboardResponse": {
      "type": "object",
      "properties": {
        "userProfile": {
          "$ref": "#/definitions/v1UserProfile"
        },
        "recentWorkflows": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WorkflowConfig"
          }
        },
        "recentExecutions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WorkflowExecution"
          }
        },
        "apiKeys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1APIKey"
          }
        },
        "managedSecrets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ManagedSecret"
          }
        }
      }
    },
    "v1ManagedSecret": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for the secret reference."
        },
        "userId": {
          "type": "string",
          "description": "The ID of the user who owns this secret."
        },
        "name": {
          "type": "string",
          "description": "A user-defined name for the secret."
        },
        "type": {
          "$ref": "#/definitions/v1ManagedSecretType",
          "description": "The type of the secret, which can hint at its usage."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the secret reference was created."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp when the secret reference was last updated."
        }
      },
      "description": "ManagedSecret is a reference to a credential stored securely in a vault.\nIt does not contain the secret value itself."
    },
    "v1ManagedSecretType": {
      "type": "string",
      "enum": [
        "MANAGED_SECRET_TYPE_UNSPECIFIED",
        "MANAGED_SECRET_TYPE_OPENAI",
        "MANAGED_SECRET_TYPE_SLACK",
        "MANAGED_SECRET_TYPE_GITHUB",
        "MANAGED_SECRET_TYPE_ANTHROPIC",
        "MANAGED_SECRET_TYPE_GOOGLE_AI",
        "MANAGED_SECRET_TYPE_CUSTOM"
      ],
      "default": "MANAGED_SECRET_TYPE_UNSPECIFIED",
      "description": "Enum for the types of managed secrets."
    },
    "v1UserProfile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "profileImageUrl": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "UserProfile contains public information about a user."
    },
    "v1WorkflowConfig": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32",
          "description": "The version of this workflow definition."
        },
        "steps": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WorkflowStep"
          },
          "description": "The list of steps (nodes) in the workflow graph."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "WorkflowConfig represents the definition of a workflow graph."
    },
    "v1WorkflowExecution": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        },
        "workflowVersion": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "$ref": "#/definitions/v1ExecutionStatus"
        },
        "context": {
          "type": "object",
          "description": "The current state/context of the workflow."
        },
        "output": {
          "type": "object",
          "description": "The final output of the workflow."
        },
        "error": {
          "$ref": "#/definitions/commonv1Status",
          "description": "Detailed error information if the execution failed."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "startedAt": {
          "type": "string",
          "format": "date-time"
        },
        "completedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "WorkflowExecution represents a single run of a workflow."
    },
    "v1WorkflowStep": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "A unique identifier for the step within the workflow."
        },
        "name": {
          "type": "string",
          "description": "A user-friendly name for the step."
        },
        "description": {
          "type": "string",
          "description": "An optional description for what this step does."
        },
        "toolName": {
          "type": "string",
          "description": "The name of the tool to execute (e.g., \"llm.v1.GenerateText\", \"slack.v1.SendMessage\")."
        },
        "parameters": {
          "type": "object",
          "description": "The parameters to pass to the tool, can be static values or expressions."
        },
        "dependsOn": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of step IDs that must be completed before this step can run."
        },
        "secretId": {
          "type": "string",
          "description": "An optional reference to a managed secret required by this tool."
        }
      },
      "description": "WorkflowStep represents a single node in the workflow graph."
    }
  }
}
